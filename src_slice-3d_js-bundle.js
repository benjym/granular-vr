"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgranular_vr"] = self["webpackChunkgranular_vr"] || []).push([["src_slice-3d_js"],{

/***/ "./src/slice-3d.js":
/*!*************************!*\
  !*** ./src/slice-3d.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/main.css */ \"./css/main.css\");\n/* harmony import */ var _text_to_speech_slice_3d_mp3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../text-to-speech/slice-3d.mp3 */ \"./text-to-speech/slice-3d.mp3\");\n/* harmony import */ var three_examples_jsm_libs_lil_gui_module_min_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three/examples/jsm/libs/lil-gui.module.min.js */ \"./node_modules/three/examples/jsm/libs/lil-gui.module.min.js\");\n/* harmony import */ var _libs_controllers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../libs/controllers.js */ \"./libs/controllers.js\");\n/* harmony import */ var _libs_buttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../libs/buttons */ \"./libs/buttons.js\");\n/* harmony import */ var _libs_audio__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../libs/audio */ \"./libs/audio.js\");\n/* harmony import */ var _libs_lights__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../libs/lights */ \"./libs/lights.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n/* provided dependency */ var THREE = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n\n\n// import * as DEMCGND from \"../resources/DEMCGND.js\";\n\n\n// import ImmersiveControls from '@depasquale/three-immersive-controls';\n\n\n// import * as SPHERES from \"../libs/SphereHandler.js\"\n// import * as WALLS from \"../libs/WallHandler.js\"\n\n// import * as GRAPHS from \"../libs/graphs\";\n\n\n\n\n\n// let scene, renderer, controls, camera\n\nlet params = {\n    'd4': {\n        'cur': 0,\n        'min': -1,\n        'max': 1\n    }\n};\n\nfunction update_spheres(x, circle, wall) {\n    let R_draw = 2 * Math.sqrt(0.5 * 0.5 - x * x);\n    circle.scale.set(R_draw, R_draw, R_draw);\n    wall.position.x = x;\n};\n\nfunction init() {\n\n    // scene = new THREE.Scene();\n    // scene.background = new THREE.Color( 0x111111 );\n    // camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n\n    // renderer = new THREE.WebGLRenderer();\n    // controls = new ImmersiveControls(camera, renderer, scene, {\n    //     initialPosition: new THREE.Vector3(0, 1.6, 2),\n    //     // moveSpeed: { keyboard: 0.025, vr: 0.025 }\n    // });\n    // renderer.setPixelRatio( window.devicePixelRatio );\n    // renderer.setSize( window.innerWidth, window.innerHeight );\n    // renderer.shadowMap.enabled = true;\n    // let container = document.createElement(\"container\");\n    // document.body.appendChild(container);\n    // container.appendChild( renderer.domElement );\n\n    _libs_lights__WEBPACK_IMPORTED_MODULE_6__.add_default_lights(_index__WEBPACK_IMPORTED_MODULE_7__.scene);\n\n\n    let sphere_geometry = new THREE.SphereGeometry(0.5, 256, 256);\n    let circle_geometry = new THREE.CircleGeometry(0.5, 256);\n    let wall_geometry = new THREE.PlaneBufferGeometry(0.5, 0.5);\n    let material = new THREE.MeshStandardMaterial({ color: 0xeeeeee, side: THREE.DoubleSide });//, opacity: 0.9 } );\n    // material.transparent = true;\n    let wall_material = new THREE.MeshStandardMaterial({ color: 0xe72564, side: THREE.DoubleSide });\n\n    const base_geometry = new THREE.PlaneGeometry(10, 10);\n    const base_material = new THREE.MeshBasicMaterial({ color: 0x333333, side: THREE.DoubleSide });\n    const plane = new THREE.Mesh(base_geometry, base_material);\n    plane.rotateX(Math.PI / 2.);\n    plane.remove_me = true;\n    _index__WEBPACK_IMPORTED_MODULE_7__.scene.add(plane);\n\n    let sphere = new THREE.Mesh(sphere_geometry, material);\n    let circle = new THREE.Mesh(circle_geometry, material);\n    let wall = new THREE.Mesh(wall_geometry, wall_material);\n    sphere.position.x = 0\n    circle.position.x = 3\n    circle.visible = true;\n    wall.rotation.y = Math.PI / 2.;\n    wall.position.x = params.d4.cur;\n    wall.scale.set(4, 4, 4);\n\n    let objects = new THREE.Group();\n\n    objects.add(sphere);\n    objects.add(circle);\n    objects.add(wall);\n\n    objects.position.x = -1.5;\n    objects.position.y = 1.6;\n    objects.remove_me = true;\n\n    _index__WEBPACK_IMPORTED_MODULE_7__.scene.add(objects);\n\n    let gui = new three_examples_jsm_libs_lil_gui_module_min_js__WEBPACK_IMPORTED_MODULE_2__.GUI();\n    gui.add(params.d4, 'cur').min(params.d4.min).max(params.d4.max).step(0.01).listen().name('Slice').onChange(function (val) { update_spheres(val, circle, wall); });\n    gui.remove_me = true;\n\n    _libs_audio__WEBPACK_IMPORTED_MODULE_5__.play_track('slice-3d.mp3', _index__WEBPACK_IMPORTED_MODULE_7__.camera, 3000);\n\n    _libs_buttons__WEBPACK_IMPORTED_MODULE_4__.add_scene_change_button(_index__WEBPACK_IMPORTED_MODULE_7__.apps.list[_index__WEBPACK_IMPORTED_MODULE_7__.apps.current - 1].url, _index__WEBPACK_IMPORTED_MODULE_7__.apps.list[_index__WEBPACK_IMPORTED_MODULE_7__.apps.current - 1].name, _index__WEBPACK_IMPORTED_MODULE_7__.controls, _index__WEBPACK_IMPORTED_MODULE_7__.scene, [-1, 1, 1], 0.25, [0, Math.PI / 4, 0]);\n    setTimeout(() => {_libs_buttons__WEBPACK_IMPORTED_MODULE_4__.add_scene_change_button(_index__WEBPACK_IMPORTED_MODULE_7__.apps.list[_index__WEBPACK_IMPORTED_MODULE_7__.apps.current + 1].url, _index__WEBPACK_IMPORTED_MODULE_7__.apps.list[_index__WEBPACK_IMPORTED_MODULE_7__.apps.current + 1].name, _index__WEBPACK_IMPORTED_MODULE_7__.controls, _index__WEBPACK_IMPORTED_MODULE_7__.scene, [1, 1, 1], 0.25, [0, -Math.PI / 4, 0])}, 50000);\n\n\n    _index__WEBPACK_IMPORTED_MODULE_7__.renderer.setAnimationLoop(function () {\n        if (_index__WEBPACK_IMPORTED_MODULE_7__.controls !== undefined) {\n            _index__WEBPACK_IMPORTED_MODULE_7__.controls.update();\n            params = _libs_controllers_js__WEBPACK_IMPORTED_MODULE_3__.moveInD4(params, _index__WEBPACK_IMPORTED_MODULE_7__.controls); // acctually moving in D3...\n            update_spheres(params.d4.cur, circle, wall);\n        }\n        _index__WEBPACK_IMPORTED_MODULE_7__.renderer.render(_index__WEBPACK_IMPORTED_MODULE_7__.scene, _index__WEBPACK_IMPORTED_MODULE_7__.camera);\n    });\n};\n\n// if ( BUTTONS.font === undefined ) {\n//     setTimeout(init, 200);\n// } else {\n//     init();\n// }\n\n// window.addEventListener( 'resize', onWindowResize, false );\n\n// function onWindowResize() {\n//     camera.aspect = window.innerWidth / window.innerHeight;\n//     camera.updateProjectionMatrix();\n//     renderer.setSize( window.innerWidth, window.innerHeight );\n//     // if ( controls !== undefined) { controls.handleResize(); }\n// };\n\n//# sourceURL=webpack://granular-vr/./src/slice-3d.js?");

/***/ }),

/***/ "./text-to-speech/slice-3d.mp3":
/*!*************************************!*\
  !*** ./text-to-speech/slice-3d.mp3 ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"196c0bfcf964dba2684f.mp3\";\n\n//# sourceURL=webpack://granular-vr/./text-to-speech/slice-3d.mp3?");

/***/ })

}]);
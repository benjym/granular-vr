"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgranular_vr"] = self["webpackChunkgranular_vr"] || []).push([["src_slice-4d_js"],{

/***/ "./src/slice-4d.js":
/*!*************************!*\
  !*** ./src/slice-4d.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/main.css */ \"./css/main.css\");\n/* harmony import */ var _text_to_speech_slice_4d_mp3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../text-to-speech/slice-4d.mp3 */ \"./text-to-speech/slice-4d.mp3\");\n/* harmony import */ var three_examples_jsm_libs_lil_gui_module_min_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three/examples/jsm/libs/lil-gui.module.min.js */ \"./node_modules/three/examples/jsm/libs/lil-gui.module.min.js\");\n/* harmony import */ var _libs_controllers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../libs/controllers.js */ \"./libs/controllers.js\");\n/* harmony import */ var _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../libs/SphereHandler.js */ \"./libs/SphereHandler.js\");\n/* harmony import */ var _libs_buttons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../libs/buttons */ \"./libs/buttons.js\");\n/* harmony import */ var _libs_lights__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../libs/lights */ \"./libs/lights.js\");\n/* harmony import */ var _libs_WallHandler__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../libs/WallHandler */ \"./libs/WallHandler.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n\n\n\n\n\n\n\n\n\n// import * as AUDIO from \"../libs/audio\";\n\n\n\n\n\nlet S;\nlet started = false;\n\nlet params = {\n    N: 1,\n    quality: 7,\n    dimension: 4,\n    d4: { cur: 0, min: -1, max: 1 },\n    lut: 'None',\n}\nasync function main() {\n    await NDDEMCGPhysics().then(() => {\n        build_world();\n        started = true;\n        _index__WEBPACK_IMPORTED_MODULE_8__.renderer.setAnimationLoop(update);\n    });\n}\n\nasync function build_world() {\n\n    _libs_lights__WEBPACK_IMPORTED_MODULE_6__.add_default_lights(_index__WEBPACK_IMPORTED_MODULE_8__.scene);\n\n    _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_4__.add_spheres(S, params, _index__WEBPACK_IMPORTED_MODULE_8__.scene)\n\n    _libs_WallHandler__WEBPACK_IMPORTED_MODULE_7__.add_base_plane(_index__WEBPACK_IMPORTED_MODULE_8__.scene);\n\n    var gui = new three_examples_jsm_libs_lil_gui_module_min_js__WEBPACK_IMPORTED_MODULE_2__.GUI();\n    gui.add(params.d4, 'cur').min(params.d4.min).max(params.d4.max).step(0.01).listen().name('Slice');\n    gui.remove_me = true;\n\n    // AUDIO.play_track('slice-4d.mp3', scene, 3000);\n\n    _libs_buttons__WEBPACK_IMPORTED_MODULE_5__.add_scene_change_button(_index__WEBPACK_IMPORTED_MODULE_8__.apps.list[_index__WEBPACK_IMPORTED_MODULE_8__.apps.current - 1].url, 'Back: ' + _index__WEBPACK_IMPORTED_MODULE_8__.apps.list[_index__WEBPACK_IMPORTED_MODULE_8__.apps.current - 1].name, _index__WEBPACK_IMPORTED_MODULE_8__.controls, _index__WEBPACK_IMPORTED_MODULE_8__.scene, [-1, 1, 1], 0.25, [0, Math.PI / 4, 0]);\n    setTimeout(() => { _libs_buttons__WEBPACK_IMPORTED_MODULE_5__.add_scene_change_button(_index__WEBPACK_IMPORTED_MODULE_8__.apps.list[_index__WEBPACK_IMPORTED_MODULE_8__.apps.current + 1].url, 'Next: ' + _index__WEBPACK_IMPORTED_MODULE_8__.apps.list[_index__WEBPACK_IMPORTED_MODULE_8__.apps.current + 1].name, _index__WEBPACK_IMPORTED_MODULE_8__.controls, _index__WEBPACK_IMPORTED_MODULE_8__.scene, [1, 1, 1], 0.25, [0, -Math.PI / 4, 0]) }, _index__WEBPACK_IMPORTED_MODULE_8__.apps.list[_index__WEBPACK_IMPORTED_MODULE_8__.apps.current].button_delay);\n}\n\nfunction update() {\n    if ( _index__WEBPACK_IMPORTED_MODULE_8__.visibility === 'visible' && started ) {\n        params = _libs_controllers_js__WEBPACK_IMPORTED_MODULE_3__.moveInD4(params, _index__WEBPACK_IMPORTED_MODULE_8__.controls);\n        _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_4__.move_spheres(S, params);\n        _libs_WallHandler__WEBPACK_IMPORTED_MODULE_7__.update_d4(params);\n    }\n    if (_index__WEBPACK_IMPORTED_MODULE_8__.controls !== undefined) { _index__WEBPACK_IMPORTED_MODULE_8__.controls.update(); }\n    _index__WEBPACK_IMPORTED_MODULE_8__.renderer.render(_index__WEBPACK_IMPORTED_MODULE_8__.scene, _index__WEBPACK_IMPORTED_MODULE_8__.camera);\n}\n\nfunction init() {\n    _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_4__.createNDParticleShader(params).then(main);\n}\n\nwindow.addEventListener('resize', onWindowResize, false);\n\nfunction onWindowResize() {\n    _index__WEBPACK_IMPORTED_MODULE_8__.camera.aspect = window.innerWidth / window.innerHeight;\n    _index__WEBPACK_IMPORTED_MODULE_8__.camera.updateProjectionMatrix();\n    _index__WEBPACK_IMPORTED_MODULE_8__.renderer.setSize(window.innerWidth, window.innerHeight);\n};\n\nasync function NDDEMCGPhysics() {\n    await _index__WEBPACK_IMPORTED_MODULE_8__.NDDEMCGLib.init(params.dimension, params.N);\n    S = _index__WEBPACK_IMPORTED_MODULE_8__.NDDEMCGLib.S;\n    setup_NDDEM();\n    started = true;\n}\n\nfunction setup_NDDEM() {\n    S.simu_interpret_command(\"dimensions \" + String(params.dimension) + \" \" + String(params.N));\n    S.simu_interpret_command(\"radius -1 0.5\");\n    S.simu_interpret_command(\"mass -1 1\");\n    S.simu_interpret_command(\"auto rho\");\n    S.simu_interpret_command(\"auto radius uniform 0.5 0.5\");\n    S.simu_interpret_command(\"auto mass\");\n    S.simu_interpret_command(\"auto inertia\");\n    S.simu_interpret_command(\"auto skin\");\n\n    S.simu_interpret_command(\"location 0 0 0 1.6 0\");\n\n    // S.simu_interpret_command(\"boundary 0 WALL -\" + String(params.L) + \" \" + String(params.L));\n    // S.simu_interpret_command(\"boundary 1 WALL -\" + String(params.L) + \" \" + String(params.L));\n    // S.simu_interpret_command(\"boundary 2 WALL -\" + String(0) + \" \" + String(2*params.H));\n    // if (params.gravity === true) {\n    // S.simu_interpret_command(\"gravity 0 0 \" + String(-9.81) + \"0 \".repeat(params.dimension - 3))\n    // }\n    // else {\n    // S.simu_interpret_command(\"gravity 0 0 0 \" + \"0 \".repeat(params.dimension - 3))\n    // }\n    // S.simu_interpret_command(\"auto location randomsquare\");\n    // S.simu_interpret_command(\"auto location randomdrop\");\n\n    // let tc = 1e-3;\n    // let rest = 0.2; // super low restitution coeff to dampen out quickly\n    // let min_particle_mass = params.particle_density * 4. / 3. * Math.PI * Math.pow(params.r_min, 3);\n    // let vals = SPHERES.setCollisionTimeAndRestitutionCoefficient(tc, rest, min_particle_mass);\n    // S.simu_interpret_command(\"set Kn \" + String(vals.stiffness));\n    // S.simu_interpret_command(\"set Kt \" + String(0.8*vals.stiffness));\n    // S.simu_interpret_command(\"set GammaN \" + String(vals.dissipation));\n    // S.simu_interpret_command(\"set GammaT \" + String(vals.dissipation));\n\n    // let bulk_modulus = 1e6;\n    // let poisson_coefficient = 0.5;\n    // let tc = SPHERES.getHertzCriticalTimestep(bulk_modulus, poisson_coefficient, params.r_min, params.particle_density);\n    // S.simu_interpret_command(\"set Kn \" + String(bulk_modulus));\n    // S.simu_interpret_command(\"set Kt \" + String(0.8*bulk_modulus));\n    // S.simu_interpret_command(\"set GammaN 0.2\"); //+ String(vals.dissipation));\n    // S.simu_interpret_command(\"set GammaT 0.2\"); //+ String(vals.dissipation));\n    // S.simu_interpret_command(\"ContactModel Hertz\");\n\n    // S.simu_interpret_command(\"set Mu \" + String(params.friction_coefficient));\n    // S.simu_interpret_command(\"set Mu_wall 0\");\n    // S.simu_interpret_command(\"set T 150\");\n    // S.simu_interpret_command(\"set dt \" + String(tc / 20));\n    // S.simu_interpret_command(\"set tdump 1000000\"); // how often to calculate wall forces\n\n    S.simu_finalise_init();\n}\n\n//# sourceURL=webpack://granular-vr/./src/slice-4d.js?");

/***/ }),

/***/ "./text-to-speech/slice-4d.mp3":
/*!*************************************!*\
  !*** ./text-to-speech/slice-4d.mp3 ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"38821bbfed080a2f4810.mp3\";\n\n//# sourceURL=webpack://granular-vr/./text-to-speech/slice-4d.mp3?");

/***/ })

}]);
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgranular_vr"] = self["webpackChunkgranular_vr"] || []).push([["src_two-particle-collision_js"],{

/***/ "./src/two-particle-collision.js":
/*!***************************************!*\
  !*** ./src/two-particle-collision.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/main.css */ \"./css/main.css\");\n/* harmony import */ var _text_to_speech_two_particle_collision_mp3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../text-to-speech/two-particle-collision.mp3 */ \"./text-to-speech/two-particle-collision.mp3\");\n/* harmony import */ var _depasquale_three_immersive_controls__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @depasquale/three-immersive-controls */ \"./node_modules/@depasquale/three-immersive-controls/build/three-immersive-controls.js\");\n/* harmony import */ var three_examples_jsm_libs_lil_gui_module_min_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three/examples/jsm/libs/lil-gui.module.min.js */ \"./node_modules/three/examples/jsm/libs/lil-gui.module.min.js\");\n/* harmony import */ var _libs_controllers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../libs/controllers.js */ \"./libs/controllers.js\");\n/* harmony import */ var _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../libs/SphereHandler.js */ \"./libs/SphereHandler.js\");\n/* harmony import */ var _libs_buttons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../libs/buttons */ \"./libs/buttons.js\");\n/* harmony import */ var _libs_audio__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../libs/audio */ \"./libs/audio.js\");\n/* harmony import */ var _libs_lights__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../libs/lights */ \"./libs/lights.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n/* provided dependency */ var THREE = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet S;\n\nvar params = {\n    dimension: 3,\n    radius: 0.5,\n    L: 500, //system size\n    d4: { cur: 0, min: -1, max: 1 },\n    lut: 'None',\n    quality: 7,\n    pyramid_size: 7,\n    particle_density: 2700,\n    particle_opacity: 0.7,\n    F_mag_max: 1e6,\n    N: 2,\n    audio: true\n}\n\nfunction init() {\n    params.dimension = 3;\n    _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.createNDParticleShader(params).then(() => {\n        main();\n    });\n}\n\nasync function main() {\n\n    await NDDEMCGPhysics();\n\n    _libs_lights__WEBPACK_IMPORTED_MODULE_8__.add_default_lights(_index__WEBPACK_IMPORTED_MODULE_9__.scene);\n\n    const base_geometry = new THREE.PlaneGeometry(10, 10);\n    const base_material = new THREE.MeshBasicMaterial({ color: 0x333333, side: THREE.DoubleSide });\n    const plane = new THREE.Mesh(base_geometry, base_material);\n    plane.rotateX(Math.PI / 2.);\n    _index__WEBPACK_IMPORTED_MODULE_9__.scene.add(plane);\n\n    _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.add_spheres(S, params, _index__WEBPACK_IMPORTED_MODULE_9__.scene);\n\n    if (params.dimension == 4) {\n        let gui = new three_examples_jsm_libs_lil_gui_module_min_js__WEBPACK_IMPORTED_MODULE_3__.GUI();\n        gui.width = 320;\n        gui.add(params.d4, 'cur', -1, 1, 0.001).name('D4 location').listen()\n        gui.remove_me = true;\n    }\n\n    _libs_buttons__WEBPACK_IMPORTED_MODULE_6__.add_scene_change_button(_index__WEBPACK_IMPORTED_MODULE_9__.apps.list[_index__WEBPACK_IMPORTED_MODULE_9__.apps.current - 1].url, _index__WEBPACK_IMPORTED_MODULE_9__.apps.list[_index__WEBPACK_IMPORTED_MODULE_9__.apps.current - 1].name, _index__WEBPACK_IMPORTED_MODULE_9__.controls, _index__WEBPACK_IMPORTED_MODULE_9__.scene, [-1, 1, 1], 0.25, [0, Math.PI / 4, 0]);\n    setTimeout(() => { _libs_buttons__WEBPACK_IMPORTED_MODULE_6__.add_scene_change_button(_index__WEBPACK_IMPORTED_MODULE_9__.apps.list[_index__WEBPACK_IMPORTED_MODULE_9__.apps.current + 1].url, _index__WEBPACK_IMPORTED_MODULE_9__.apps.list[_index__WEBPACK_IMPORTED_MODULE_9__.apps.current + 1].name, _index__WEBPACK_IMPORTED_MODULE_9__.controls, _index__WEBPACK_IMPORTED_MODULE_9__.scene, [1, 1, 1], 0.25, [0, -Math.PI / 4, 0]) }, _index__WEBPACK_IMPORTED_MODULE_9__.apps.list[_index__WEBPACK_IMPORTED_MODULE_9__.apps.current].button_delay);\n\n    _index__WEBPACK_IMPORTED_MODULE_9__.renderer.setAnimationLoop(async () => {\n        if (_index__WEBPACK_IMPORTED_MODULE_9__.controls !== undefined) {\n            _index__WEBPACK_IMPORTED_MODULE_9__.controls.update();\n        }\n        S.simu_step_forward(5);\n        _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.move_spheres(S, params);\n        await _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.draw_force_network(S, params, _index__WEBPACK_IMPORTED_MODULE_9__.scene);\n\n        if (_libs_audio__WEBPACK_IMPORTED_MODULE_7__.listener !== undefined) {\n            _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.update_fixed_sounds(S, params);\n        }\n\n        _index__WEBPACK_IMPORTED_MODULE_9__.renderer.render(_index__WEBPACK_IMPORTED_MODULE_9__.scene, _index__WEBPACK_IMPORTED_MODULE_9__.camera);\n        _libs_controllers_js__WEBPACK_IMPORTED_MODULE_4__.moveInD4(params, _index__WEBPACK_IMPORTED_MODULE_9__.controls);\n    });\n\n    _libs_audio__WEBPACK_IMPORTED_MODULE_7__.play_track('two-particle-collision.mp3', _index__WEBPACK_IMPORTED_MODULE_9__.scene, 3000);\n\n}\n\nasync function NDDEMCGPhysics() {\n    await _index__WEBPACK_IMPORTED_MODULE_9__.NDDEMCGLib.init(params.dimension, params.N);\n    S = _index__WEBPACK_IMPORTED_MODULE_9__.NDDEMCGLib.S;\n    setup_NDDEM();\n}\n\nfunction setup_NDDEM() {\n    S.simu_interpret_command(\"dimensions \" + String(params.dimension) + \" \" + String(params.N));\n    S.simu_interpret_command(\"radius -1 \" + params.radius);\n    S.simu_interpret_command(\"mass -1 1\");\n    S.simu_interpret_command(\"auto rho\");\n    S.simu_interpret_command(\"auto inertia\");\n\n    S.simu_interpret_command(\"boundary 0 WALL -5 5\");\n    S.simu_interpret_command(\"boundary 1 WALL -5 5\");\n    S.simu_interpret_command(\"boundary 2 WALL 0 5\");\n    S.simu_interpret_command(\"gravity 0 0 -10 0\");\n\n    if (params.dimension == 4) {\n        S.simu_interpret_command(\"boundary 3 WALL \" + String(params.d4.min) + \" \" + String(params.d4.max));\n    }\n\n    S.simu_interpret_command(\"location 0 0 0 2 0\");\n    S.simu_interpret_command(\"location 1 0 0 0 0\");\n    S.simu_setFrozen(1);\n\n    let tc = 0.02;\n    let rest = 0.75; // super low restitution coeff to dampen out quickly\n    params.particle_volume = Math.PI * Math.PI * Math.pow(params.radius, 4) / 2.;\n    params.particle_mass = params.particle_volume * params.particle_density;\n\n    let vals = _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.setCollisionTimeAndRestitutionCoefficient(tc, rest, params.particle_mass)\n    S.simu_setMass(0, params.particle_mass);\n    S.simu_setMass(1, params.particle_mass);\n\n    S.simu_interpret_command(\"set Kn \" + String(vals.stiffness));\n    S.simu_interpret_command(\"set Kt \" + String(0.8 * vals.stiffness));\n    S.simu_interpret_command(\"set GammaN \" + String(vals.dissipation));\n    S.simu_interpret_command(\"set GammaT \" + String(vals.dissipation));\n    S.simu_interpret_command(\"set Mu 0.5\");\n    S.simu_interpret_command(\"set Mu_wall 1\");\n    S.simu_interpret_command(\"set damping 0\");\n    S.simu_interpret_command(\"set T 150\");\n    S.simu_interpret_command(\"set dt \" + String(tc / 20));\n    S.simu_interpret_command(\"set tdump 1000000\"); // how often to calculate wall forces\n    S.simu_interpret_command(\"auto skin\");\n    S.simu_finalise_init();\n\n}\n\n\n//# sourceURL=webpack://granular-vr/./src/two-particle-collision.js?");

/***/ }),

/***/ "./text-to-speech/two-particle-collision.mp3":
/*!***************************************************!*\
  !*** ./text-to-speech/two-particle-collision.mp3 ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"d99e3b6d7c76ec325799.mp3\";\n\n//# sourceURL=webpack://granular-vr/./text-to-speech/two-particle-collision.mp3?");

/***/ })

}]);
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgranular_vr"] = self["webpackChunkgranular_vr"] || []).push([["src_2d-rain_js"],{

/***/ "./src/2d-rain.js":
/*!************************!*\
  !*** ./src/2d-rain.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/main.css */ \"./css/main.css\");\n/* harmony import */ var _text_to_speech_2d_rain_mp3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../text-to-speech/2d-rain.mp3 */ \"./text-to-speech/2d-rain.mp3\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls.js */ \"./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n/* harmony import */ var three_examples_jsm_libs_lil_gui_module_min_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three/examples/jsm/libs/lil-gui.module.min.js */ \"./node_modules/three/examples/jsm/libs/lil-gui.module.min.js\");\n/* harmony import */ var three_examples_jsm_math_Lut_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three/examples/jsm/math/Lut.js */ \"./node_modules/three/examples/jsm/math/Lut.js\");\n/* harmony import */ var _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../libs/SphereHandler.js */ \"./libs/SphereHandler.js\");\n/* harmony import */ var _libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../libs/WallHandler.js */ \"./libs/WallHandler.js\");\n/* harmony import */ var _libs_lights__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../libs/lights */ \"./libs/lights.js\");\n/* harmony import */ var _libs_buttons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../libs/buttons */ \"./libs/buttons.js\");\n/* harmony import */ var _libs_audio__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../libs/audio */ \"./libs/audio.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./index */ \"./src/index.js\");\n\n\n\n\n\n\n\n\n\n\n// import * as LAYOUT from '../libs/Layout.js'\n// import { NDSTLLoader, renderSTL } from '../libs/NDSTLLoader.js';\n// import * as RAYCAST from '../libs/RaycastHandler.js';\n\n\n\n\n\n\n\nlet gui;\nlet S;\nlet cg_mesh;\n\nvar params = {\n    dimension: 2,\n    L: 2, //system size\n    N: 250,\n    // packing_fraction: 0.5,\n    constant_volume: true,\n    axial_strain: 0,\n    volumetric_strain: 0,\n    paused: false,\n    g_mag: 1e3,\n    theta: 0, // slope angle in DEGREES\n    d4: {cur:0},\n    r_max: 0.1,\n    r_min: 0.15,\n    particle_density: 1,\n    shear_rate: 10,\n    lut: 'White',\n    cg_field: 'Density',\n    quality: 5,\n    cg_width: 50,\n    cg_height: 50,\n    cg_opacity: 0.8,\n    cg_window_size: 3,\n    particle_opacity: 1,\n    F_mag_max: 0.005,\n    aspect_ratio: 1,\n}\n\nlet rainbow    = new three_examples_jsm_math_Lut_js__WEBPACK_IMPORTED_MODULE_4__.Lut(\"rainbow\", 512); // options are rainbow, cooltowarm and blackbody\nlet cooltowarm = new three_examples_jsm_math_Lut_js__WEBPACK_IMPORTED_MODULE_4__.Lut(\"cooltowarm\", 512); // options are rainbow, cooltowarm and blackbody\nlet blackbody  = new three_examples_jsm_math_Lut_js__WEBPACK_IMPORTED_MODULE_4__.Lut(\"blackbody\", 512); // options are rainbow, cooltowarm and blackbody\n\nparams.average_radius = (params.r_min + params.r_max)/2.;\nparams.thickness = params.average_radius;\n\n\nparams.particle_volume = Math.PI*Math.pow(params.average_radius,2);\n\nparams.particle_mass = params.particle_volume * params.particle_density;\n\nfunction init() {\n    _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.createNDParticleShader(params).then(main());\n}\n\nasync function main() {\n\n    await NDDEMCGPhysics();\n\n    _libs_lights__WEBPACK_IMPORTED_MODULE_7__.add_default_lights(_index__WEBPACK_IMPORTED_MODULE_10__.scene);\n\n    _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.add_spheres(S,params,_index__WEBPACK_IMPORTED_MODULE_10__.scene);\n\n    const base_geometry = new three__WEBPACK_IMPORTED_MODULE_11__.PlaneGeometry(2*params.L, 2*params.L);\n    const base_material = new three__WEBPACK_IMPORTED_MODULE_11__.MeshBasicMaterial({ color: 0x333333, side: three__WEBPACK_IMPORTED_MODULE_11__.DoubleSide });\n    const plane = new three__WEBPACK_IMPORTED_MODULE_11__.Mesh(base_geometry, base_material);\n    plane.rotateX(Math.PI / 2.);\n    // plane.position.y = -0.5 * params.r_min;\n    _index__WEBPACK_IMPORTED_MODULE_10__.scene.add(plane);\n\n    _libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__.add_back(params, _index__WEBPACK_IMPORTED_MODULE_10__.scene);\n    _libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__.add_left(params, _index__WEBPACK_IMPORTED_MODULE_10__.scene);\n    _libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__.add_right(params, _index__WEBPACK_IMPORTED_MODULE_10__.scene);\n    _libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__.add_front(params, _index__WEBPACK_IMPORTED_MODULE_10__.scene);\n    _libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__.back.scale.y = params.thickness;//Math.PI/2.;\n    var vert_walls = [_libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__.left,_libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__.right,_libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__.back,_libs_WallHandler_js__WEBPACK_IMPORTED_MODULE_6__.front];\n\n    vert_walls.forEach( function(mesh) {\n        mesh.scale.x = 2*params.L + 2*params.thickness;\n        mesh.scale.z = 2*params.L + 2*params.thickness;\n    });\n\n    let geometry = new three__WEBPACK_IMPORTED_MODULE_11__.PlaneGeometry( 2*params.L, 2*params.L );\n    let material = new three__WEBPACK_IMPORTED_MODULE_11__.MeshBasicMaterial( {color: 0xffff00, side: three__WEBPACK_IMPORTED_MODULE_11__.DoubleSide} );\n    material.transparent = true;\n    cg_mesh = new three__WEBPACK_IMPORTED_MODULE_11__.Mesh( geometry, material );\n    cg_mesh.position.z = -1;\n    // scene.add( cg_mesh );\n\n    _libs_buttons__WEBPACK_IMPORTED_MODULE_8__.add_scene_change_button(_index__WEBPACK_IMPORTED_MODULE_10__.apps.list[_index__WEBPACK_IMPORTED_MODULE_10__.apps.current - 1].url, _index__WEBPACK_IMPORTED_MODULE_10__.apps.list[_index__WEBPACK_IMPORTED_MODULE_10__.apps.current - 1].name, _index__WEBPACK_IMPORTED_MODULE_10__.controls, _index__WEBPACK_IMPORTED_MODULE_10__.scene, [-1, 1, 1], 0.25, [0, Math.PI / 4, 0]);\n    setTimeout(() => {_libs_buttons__WEBPACK_IMPORTED_MODULE_8__.add_scene_change_button(_index__WEBPACK_IMPORTED_MODULE_10__.apps.list[_index__WEBPACK_IMPORTED_MODULE_10__.apps.current + 1].url, _index__WEBPACK_IMPORTED_MODULE_10__.apps.list[_index__WEBPACK_IMPORTED_MODULE_10__.apps.current + 1].name, _index__WEBPACK_IMPORTED_MODULE_10__.controls, _index__WEBPACK_IMPORTED_MODULE_10__.scene, [1, 1, 1], 0.25, [0, -Math.PI / 4, 0])}, 24000);\n\n    _index__WEBPACK_IMPORTED_MODULE_10__.renderer.setAnimationLoop(function () {\n        update();\n        _index__WEBPACK_IMPORTED_MODULE_10__.renderer.render(_index__WEBPACK_IMPORTED_MODULE_10__.scene, _index__WEBPACK_IMPORTED_MODULE_10__.camera);\n    });\n\n    _libs_audio__WEBPACK_IMPORTED_MODULE_9__.play_track('2d-rain.mp3', _index__WEBPACK_IMPORTED_MODULE_10__.camera, 3000);\n}\n\n\nfunction update() {\n    // requestAnimationFrame( animate );\n    _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.move_spheres(S,params);\n    // RAYCAST.animate_locked_particle(S, camera, SPHERES.spheres, params);\n    if ( !params.paused ) {\n        S.simu_step_forward(15);\n        // update_cg_field();\n    }\n    // SPHERES.draw_force_network(S, params, scene);\n    _index__WEBPACK_IMPORTED_MODULE_10__.controls.update();\n    _index__WEBPACK_IMPORTED_MODULE_10__.renderer.render( _index__WEBPACK_IMPORTED_MODULE_10__.scene, _index__WEBPACK_IMPORTED_MODULE_10__.camera );\n}\n\nfunction update_cg_field() { \n    S.cg_param_read_timestep(0) ;\n    S.cg_process_timestep(0,false) ;\n    var grid = S.cg_get_gridinfo();\n    const size = params.cg_width * params.cg_height;\n    const data = new Uint8Array( 4 * size );\n    const opacity = parseInt(255 * params.cg_opacity);\n    let val;\n    let lut;\n    if ( params.cg_field === 'Density' ) {\n        val = S.cg_get_result(0, \"RHO\", 0);\n        lut = rainbow;\n        let maxVal = val.reduce(function(a, b) { return Math.max(Math.abs(a), Math.abs(b)) }, 0);\n        lut.setMin(0);\n        lut.setMax(params.particle_density*100);\n    }\n    else if ( params.cg_field === 'Velocity' ) {\n        val = S.cg_get_result(0, \"VAVG\", 1);\n        lut = cooltowarm;\n        let maxVal = val.reduce(function(a, b) { return Math.max(Math.abs(a), Math.abs(b)) }, 0);\n        lut.setMin(-0.9*maxVal);\n        lut.setMax( 0.9*maxVal);\n    }\n    else if ( params.cg_field === 'Pressure' ) {\n        const stressTcxx=S.cg_get_result(0, \"TC\", 0) ;\n        const stressTcyy=S.cg_get_result(0, \"TC\", 3) ;\n        const stressTczz=S.cg_get_result(0, \"TC\", 6) ;\n        val = new Array(stressTcxx.length);\n        for (var i=0 ; i<stressTcxx.length ; i++)\n        {\n            val[i]=(stressTcxx[i]+stressTcyy[i]+stressTczz[i])/3. ;\n        }\n        lut = rainbow;\n        let maxVal = val.reduce(function(a, b) { return Math.max(Math.abs(a), Math.abs(b)) }, 0);\n        lut.setMin(0);\n        lut.setMax(0.9*maxVal);\n    } else if ( params.cg_field === 'Shear stress' ) {\n        val = S.cg_get_result(0, \"TC\", 1);\n        lut = cooltowarm;\n        let maxVal = val.reduce(function(a, b) { return Math.max(Math.abs(a), Math.abs(b)) }, 0);\n        lut.setMin(-0.9*maxVal);\n        lut.setMax( 0.9*maxVal);\n    }\n\n    for ( let i = 0; i < size; i ++ ) {\n        var color = lut.getColor(val[i]);\n        // console.log(val[i])\n        const r = Math.floor( color.r * 255 );\n        const g = Math.floor( color.g * 255 );\n        const b = Math.floor( color.b * 255 );\n        const stride = i * 4;\n        data[ stride     ] = r;//parseInt(val[i]/maxVal*255);\n        data[ stride + 1 ] = g;\n        data[ stride + 2 ] = b;\n        if ( val[i] === 0 ) {\n            data[ stride + 3 ] = 0;\n        } else {\n            data[ stride + 3 ] = opacity;\n        }\n\n\n    }\n    const texture = new three__WEBPACK_IMPORTED_MODULE_11__.DataTexture( data, params.cg_width, params.cg_height );\n    // texture.magFilter = THREE.LinearFilter; // smooth the data artifically\n    texture.needsUpdate = true;\n    cg_mesh.material.map = texture;\n    // cg_mesh.material.opacity = parseInt(255*params.opacity);\n}\n\nfunction update_cg_params(S, params) {\n    var cgparam ={} ;\n    cgparam[\"file\"]=[{\"filename\":\"none\", \"content\": \"particles\", \"format\":\"interactive\", \"number\":1}] ;\n    cgparam[\"boxes\"]=[params.cg_width,params.cg_height] ;\n    // cgparam[\"boundaries\"]=[[-params.L,-params.L,-params.L],[params.L,params.L,params.L]] ;\n    cgparam[\"boundaries\"]=[\n        [-params.L,-params.L],\n        [ params.L, params.L]] ;\n    cgparam[\"window size\"]=params.cg_window_size*params.average_radius ;\n    cgparam[\"skip\"]=0;\n    cgparam[\"max time\"]=1 ;\n    cgparam[\"time average\"]=\"None\" ;\n    cgparam[\"fields\"]=[\"RHO\", \"VAVG\", \"TC\"] ;\n    cgparam[\"periodicity\"]=[false,false];\n    cgparam[\"window\"]=\"Lucy2D\";\n    cgparam[\"dimension\"]=2;\n\n\n    // console.log(JSON.stringify(cgparam)) ;\n    S.cg_param_from_json_string(JSON.stringify(cgparam)) ;\n    S.cg_setup_CG() ;\n}\n\nasync function NDDEMCGPhysics() {\n\n    if ( 'DEMCGND' in window === false ) {\n\n        console.error( 'NDDEMPhysics: Couldn\\'t find DEMCGND.js' );\n        return;\n\n    }\n\n    await DEMCGND().then( (NDDEMCGLib) => {\n        if ( params.dimension == 2 ) {\n            S = new NDDEMCGLib.DEMCG2D (params.N);\n        }\n        else if ( params.dimension == 3 ) {\n            S = new NDDEMCGLib.DEMCG3D (params.N);\n        }\n        else if ( params.dimension == 4 ) {\n            S = new NDDEMCGLib.DEMCG4D (params.N);\n        }\n        else if ( params.dimension == 5 ) {\n            S = new NDDEMCGLib.DEMCG5D (params.N);\n        }\n        finish_setup();\n    } );\n\n\n    function finish_setup() {\n        S.simu_interpret_command(\"dimensions \" + String(params.dimension) + \" \" + String(params.N));\n        S.simu_interpret_command(\"radius -1 0.5\");\n        let m;\n        if ( params.dimension === 2) {\n            m = Math.PI*0.5*0.5*params.particle_density;\n        } else {\n            m = 4./3.*Math.PI*0.5*0.5*0.5*params.particle_density;\n        }\n\n        S.simu_interpret_command(\"mass -1 \" + String(m));\n        S.simu_interpret_command(\"auto rho\");\n        S.simu_interpret_command(\"auto radius uniform \"+params.r_min+\" \"+params.r_max);\n        S.simu_interpret_command(\"auto mass\");\n        S.simu_interpret_command(\"auto inertia\");\n        S.simu_interpret_command(\"auto skin\");\n\n        S.simu_interpret_command(\"boundary 0 WALL 0 \" +String(100*params.L));\n        S.simu_interpret_command(\"boundary 1 WALL -\"+String(params.L)+\" \"+String(params.L));\n        if ( params.dimension > 2 ) {\n            S.simu_interpret_command(\"boundary 2 WALL -\"+String(params.r_max)+\" \"+String(params.r_max));\n        }\n        if ( params.dimension > 3 ) {\n            S.simu_interpret_command(\"boundary 3 WALL -\"+String(params.L)+\" \"+String(params.L));\n        }\n        S.simu_interpret_command(\"gravity -10 \" + \"0 \".repeat(params.dimension - 2))\n\n        S.simu_interpret_command(\"auto location randomdrop\");\n\n        // S.simu_interpret_command(\"set Kn 2e5\");\n        // S.simu_interpret_command(\"set Kt 8e4\");\n        // S.simu_interpret_command(\"set GammaN 75\");\n        // S.simu_interpret_command(\"set GammaT 75\");\n        // S.simu_interpret_command(\"set Mu 1\");\n        // S.simu_interpret_command(\"set Mu_wall 0\");\n        // S.simu_interpret_command(\"set T 150\");\n        // S.simu_interpret_command(\"set dt 0.0002\");\n        // S.simu_interpret_command(\"set tdump 10\"); // how often to calculate wall forces\n        // S.simu_interpret_command(\"auto skin\");\n        // S.simu_finalise_init () ;\n\n        let tc = 1e-2;\n        let rest = 0.5; // super low restitution coeff to dampen out quickly\n        let vals = _libs_SphereHandler_js__WEBPACK_IMPORTED_MODULE_5__.setCollisionTimeAndRestitutionCoefficient (tc, rest, params.particle_mass)\n\n        S.simu_interpret_command(\"set Kn \" + String(vals.stiffness));\n        S.simu_interpret_command(\"set Kt \" + String(0.8*vals.stiffness));\n        S.simu_interpret_command(\"set GammaN \" + String(vals.dissipation));\n        S.simu_interpret_command(\"set GammaT \" + String(vals.dissipation));\n        S.simu_interpret_command(\"set Mu 0.5\");\n        S.simu_interpret_command(\"set damping 0.0001\");\n        S.simu_interpret_command(\"set T 150\");\n        S.simu_interpret_command(\"set dt \" + String(tc/20));\n        S.simu_interpret_command(\"set tdump 1000000\"); // how often to calculate wall forces\n        S.simu_interpret_command(\"auto skin\");\n        S.simu_finalise_init () ;\n\n        update_cg_params(S, params);\n\n    }\n}\n\n\n//# sourceURL=webpack://granular-vr/./src/2d-rain.js?");

/***/ }),

/***/ "./text-to-speech/2d-rain.mp3":
/*!************************************!*\
  !*** ./text-to-speech/2d-rain.mp3 ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"a862a5a0c91a21cfe6c3.mp3\";\n\n//# sourceURL=webpack://granular-vr/./text-to-speech/2d-rain.mp3?");

/***/ })

}]);